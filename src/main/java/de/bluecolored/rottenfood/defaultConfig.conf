##                          ##
##  RottenFood V 1.0        ##
##                          ##
##  by Blue (Lukas Rieger)  ##
##  http://bluecolored.de/  ##
##                          ##

# The intervall in ticks how often the items in players-inventories and currently opened are checked for updates, 
# so that you can watch items change thir state..
# default is 20 (once every second)
update-intervall: 20

# This defines how the age is displayed in the items lore (if enabled, see the 'show-age' property in 'item-configs')
# You can use formatting codes for colors
# 
# Those are the placeholders for the time:
# %D - the full age in days
# %H - the full age in hours
# %M - the full age in minutes
# %S - the full age in seconds
# %h - the age in hours (without full days and with leading zeroes)
# %m - the age in minutes (without full hours and with leading zeroes)
# %s - the age in seconds (without full minutes and with leading zeroes)
# 
# So: "Age: %D Days %h:%m:%s" would be e.g. "Age: 3 Days 05:25:10"
age-time-format: "&7This item is &f%D &7days old."

item-configs: [
	
	# This config is an example showing all the possibilities you got..
	# below this there are more entries showing much more ideas what you cold do with this plugin!
	{
		# The items this config-part is about
		items: [
			"minecraft:cooked_beef"
			"minecraft:cooked_porkchop"
			"minecraft:cooked_mutton"
		]
		
		# The intervals in seconds to which the ages are rounded, so they can be stacked together.
		# Higher values improve the stack-ability of aging items.
		# (this value should not be higher than the minimum-interval between two stages (including all modifier possibilities))
		item-stacking-intervall: 60
		
		# If this value is set to true, the age of the item will be displayed in its lore-text
		show-age: true
		
		# The age-states the above items can reach
		states: [
			{
				# The age of the item in seconds
				# 0 is the initial age of the item (The item is 0 sec old)
				age: 0
				
				# The name the item will have (remove the entry to use the default/previous name)
				# You can use normal formatting code or json-formated text
				name: "&aFreshly fried Steak"
				
				# The lore (text below the item-name) the item will have (remove the entry to use the default/previous lore)
				# You can use normal formatting code or json-formated text
				lore: "&7It's still hot!"
			},
			{
				# The item is 600 seconds (10 minutes) old (or older)
				age: 600
				
				name: "&2Steak"
				lore: "&7No longer hot, but still delicious!"
			},
			{
				# It's now a 2 hours old steak..
				age: 7200
				
				name: "&7Old Steak"
				lore: "&7Old, but it wont kill you if you eat it.."
			},
			{
				# 48h old..
				age: 172800
				
				name: "&7Rotten Steak"
				lore: "&8Once a tasty steak.."
				
				# The item will be replaced with this one
				# This will reset the age of the item and, if the new item is also configured for this plugin, will start a new ageing-process
				# If a new ageing-config doesn't override the name/lore, the new item will have the name/lore it had before
				replacement-item: "minecraft:rotten_flesh"
			}
		]
		
		# Ageing modifiers change the speed of how fast those items age, based on other items in the same inventory
		# with this you can e.g. make food be more durable if it is in a chest that also contains ice-blocks
		# or make it rot faster if it is stored next to rotten-flesh or dirt-blocks or so.
		ageing-modifier: [
			
			# "If there is at least 5 ice-blocks in the same inventory, the shelf-life of the flesh will be 10 times as long"
			{	
				# the item that activates this modifier
				item: "minecraft:ice"
				
				# how is the aging affected
				# (the amount of time an item aged is multiplied with this value if this modifier applies)
				multiplier: 0.1
				
				# The minimum amount of the above item that is needed to activate the modifier
				min-item-count: 5
			},
			
			# "If there is rotten-flesh in the same inventory, the shelf-life of the flesh will be reduced by 1/3 .."
			{
				item: "minecraft:rotten_flesh"
				multiplier: 1.5
				min-item-count: 1
			}
		]
		
	},
	
	# Fish is also getting older..
	# This time without changing names too much..
	{
		items: [
			"minecraft:fish"
			"minecraft:cooked_fish"
		]
		
		item-stacking-intervall: 60
		show-age: false
		
		states: [
			{
				age: 7200
				lore: "&7Old, but it wont kill you if you eat it.."
			},
			{
				age: 172800
				lore: "&8Once a fish.."
				replacement-item: "minecraft:rotten_flesh"
			}
		]
		
		ageing-modifier: [
			{	
				item: "minecraft:ice"
				multiplier: 0.1
				min-item-count: 5
			},
			{
				item: "minecraft:rotten_flesh"
				multiplier: 1.5
				min-item-count: 1
			}
		]
	},
	
	# Don't let potatoes lie around too long..
	# After a month they become poisonous!
	{
		items: [
			"minecraft:potato"
		]
		
		item-stacking-intervall: 600
		show-age: true
		
		states: [
			{
				age: 2592000
				replacement-item: "minecraft:poisonous_potato"
			}
		]
	},
	
	# Despite its name, this plugin is not limited to food...
	# Without water, flowers and saplings will dry out
	{
		items: [
			"minecraft:red_flower"
			"minecraft:yellow_flower"
			"minecraft:sapling"
		]
		
		item-stacking-intervall: 600
		show-age: false
		
		states: [
			{
				age: 172800
				replacement-item: "minecraft:deadbush"
			}
		]
	}
	
]